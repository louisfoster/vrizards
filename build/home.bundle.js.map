{"version":3,"sources":["webpack:///home.bundle.js","webpack:///webpack/bootstrap dd5753a8605a948b2c1e","webpack:///./src/home/index.js","webpack:///./src/home/video.js","webpack:///./src/home/rayInput.js","webpack:///./src/home/images/panel.png","webpack:///./src/home/images/look.png","webpack:///./src/home/images/look2.png"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","initThreeJS","container","document","getElementById","renderer","THREE","WebGLRenderer","antialias","setSize","window","innerWidth","innerHeight","appendChild","domElement","addEventListener","event","initRayInput","_rayInput2","init","camera","initVREffect","effect","StereoEffect","separation","initScene","scene","Scene","PerspectiveCamera","add","_video2","listener","AudioListener","audioLoader","AudioLoader","sound","Audio","load","buffer","setBuffer","setLoop","setVolume","play","ambient","AmbientLight","directionalLight","DirectionalLight","position","set","normalize","createTractor","objLoader","OBJLoader","setPath","object","material","MeshPhongMaterial","color","traverse","child","Mesh","tractorBody","x","y","z","scale","MeshLambertMaterial","wheels","panelUrl","loader","TextureLoader","map","MeshBasicMaterial","geometry","PlaneGeometry","plane","rotation","Math","PI","lookUrl","defaultMaterial","CubeGeometry","btn","highlightMaterial","wheelStart","stop","pause","wheelStahp","higlightMapUrl","initVRControls","controls","DeviceOrientationControls","animate","wheelSpin","now","Date","deltat","currentTime","fract","duration","angle","run","elapsedTimeSum","clock","getElapsedTime","isStart","requestAnimationFrame","VRMode","render","update","visible","bindEvents","querySelector","mozRequestFullScreen","webkitRequestFullscreen","_video","_rayInput","Clock","SphereBufferGeometry","video","createElement","width","height","loop","muted","src","setAttribute","onended","console","log","e","preventDefault","stopPropagation","hasAttribute","removeAttribute","texture","VideoTexture","minFilter","LinearFilter","format","RGBFormat","mesh","Object","defineProperty","value","Reticulum","proximity","reticle","restPoint","innerRadius","outerRadius","hover","speed","vibrate","fuse","clickCancelFuse","overCallback","outCallback","longCallback","onGazeOver","onGazeOut","onGazeLong","onGazeClick"],"mappings":"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","file":"home.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\tvar _video = __webpack_require__(2),\n\t    _video2 = _interopRequireDefault(_video),\n\t    _rayInput = __webpack_require__(3),\n\t    _rayInput2 = _interopRequireDefault(_rayInput);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar container = null,\n\t    renderer = null,\n\t    effect = null,\n\t    controls = null,\n\t    scene = null,\n\t    camera = null,\n\t    plane = null,\n\t    btn = null,\n\t    wheels = null,\n\t    tractorBody = null,\n\t    VRMode = true,\n\t    wheelSpin = true,\n\t    sound = null,\n\t    isStart = false,\n\t    clock = new THREE.Clock(),\n\t    elapsedTimeSum = 0;\n\t\n\t\n\t// Set up Three.js\n\tinitThreeJS\n\t// Set up VR rendering\n\t();initVREffect\n\t// Create the scene content\n\t();initScene\n\t// Set up VR camera controls\n\t();initVRControls\n\t\n\t// init ray input\n\t();initRayInput\n\t\n\t// Run the run loop\n\t();run\n\t// Bind Dom Events\n\t();bindEvents();\n\t\n\tfunction initThreeJS() {\n\t\tcontainer = document.getElementById('container'\n\t\t// Create the Three.js renderer and attach it to our canvas\n\t\t);renderer = new THREE.WebGLRenderer({ antialias: true });\n\t\t// Set the viewport size\n\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\tcontainer.appendChild(renderer.domElement);\n\t\n\t\twindow.addEventListener('resize', function (event) {\n\t\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}, false);\n\t}\n\t\n\tfunction initRayInput() {\n\t\t_rayInput2.default.init(camera);\n\t}\n\t\n\tfunction initVREffect() {\n\t\t// Set up Cardboard renderer\n\t\teffect = new THREE.StereoEffect(renderer);\n\t\teffect.setSize(window.innerWidth, window.innerHeight\n\t\n\t\t// StereoEffect's default separation is in cm, we're in M\n\t\t// Actual cardboard eye separation is 2.5in\n\t\t// Finally, separation is per-eye so divide by 2\n\t\t);effect.separation = 2.5 * 0.0254 / 2;\n\t}\n\t\n\tfunction initScene() {\n\t\t// Create a new Three.js scene\n\t\tscene = new THREE.Scene();\n\t\t// Add  a camera so we can view the scene\n\t\t// Note that this camera's FOV is ignored in favor of the\n\t\t// Oculus-supplied FOV for each used inside VREffect.\n\t\t// See VREffect.js h/t Michael Blix\n\t\tcamera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 4000);\n\t\n\t\tscene.add(camera);\n\t\n\t\tscene.add(_video2.default.init());\n\t\n\t\tvar listener = new THREE.AudioListener();\n\t\tcamera.add(listener);\n\t\tvar audioLoader = new THREE.AudioLoader();\n\t\tsound = new THREE.Audio(listener);\n\t\taudioLoader.load('../src/home/videos/tractor.mp3', function (buffer) {\n\t\t\tsound.setBuffer(buffer);\n\t\t\tsound.setLoop(true);\n\t\t\tsound.setVolume(0.02);\n\t\t\tsound.play();\n\t\t});\n\t\n\t\tvar ambient = new THREE.AmbientLight(0x222222);\n\t\tscene.add(ambient);\n\t\tvar directionalLight = new THREE.DirectionalLight(0xbbbbbb);\n\t\tdirectionalLight.position.set(0, 200, 50).normalize();\n\t\tscene.add(directionalLight);\n\t\n\t\tcreateTractor();\n\t}\n\t\n\tvar defaultMaterial = void 0,\n\t    highlightMaterial = void 0;\n\t\n\tfunction createTractor() {\n\t\n\t\tvar objLoader = new THREE.OBJLoader();\n\t\n\t\tobjLoader.setPath('../src/home/obj/');\n\t\tobjLoader.load('tractorbody.obj', function (object) {\n\t\n\t\t\tvar material = new THREE.MeshPhongMaterial({ color: 0xdd2211 });\n\t\n\t\t\tobject.traverse(function (child) {\n\t\n\t\t\t\tif (child instanceof THREE.Mesh) {\n\t\n\t\t\t\t\tchild.material = material;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\ttractorBody = object;\n\t\n\t\t\tobject.position.x = 0;\n\t\t\tobject.position.y = -6;\n\t\t\tobject.position.z = 1;\n\t\n\t\t\tobject.scale.x = 12;\n\t\t\tobject.scale.y = 12;\n\t\t\tobject.scale.z = 12;\n\t\n\t\t\tscene.add(object);\n\t\t});\n\t\n\t\tobjLoader.load('tracwheels.obj', function (object) {\n\t\n\t\t\tvar material = new THREE.MeshLambertMaterial({ color: 0x333333 });\n\t\n\t\t\tobject.traverse(function (child) {\n\t\n\t\t\t\tif (child instanceof THREE.Mesh) {\n\t\n\t\t\t\t\tchild.material = material;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tobject.position.x = 0;\n\t\t\tobject.position.y = -3.5;\n\t\t\tobject.position.z = -1.8;\n\t\n\t\t\tobject.scale.x = 12;\n\t\t\tobject.scale.y = 12;\n\t\t\tobject.scale.z = 12;\n\t\n\t\t\twheels = object;\n\t\n\t\t\tscene.add(object);\n\t\t});\n\t\n\t\tvar panelUrl = __webpack_require__(4),\n\t\t    loader = new THREE.TextureLoader();\n\t\n\t\tloader.load(panelUrl, function (map) {\n\t\t\t// Now, create a Basic material; pass in the map\n\t\t\tvar material = new THREE.MeshBasicMaterial({ map: map }),\n\t\t\t    geometry = new THREE.PlaneGeometry(2, 2, 2);\n\t\t\t// Create the cube geometry\n\t\n\t\t\t// And put the geometry and material together into a mesh\n\t\t\tplane = new THREE.Mesh(geometry, material);\n\t\t\t// Move the mesh back from the camera and tilt it toward the viewer\n\t\t\tplane.position.z = -2;\n\t\t\tplane.position.y = -1;\n\t\t\tplane.rotation.x = Math.PI / -4;\n\t\t\t// plane.rotation.y = Math.PI / 5\n\t\t\t// Finally, add the mesh to our scene\n\t\t\tscene.add(plane);\n\t\t});\n\t\n\t\tvar lookUrl = __webpack_require__(5);\n\t\n\t\tloader.load(lookUrl, function (map) {\n\t\t\t// Now, create a Basic material; pass in the map\n\t\t\tvar material = defaultMaterial = new THREE.MeshBasicMaterial({ map: map }),\n\t\t\t    geometry = new THREE.CubeGeometry(0.5, 0.5, 0.5);\n\t\t\t// Create the cube geometry\n\t\n\t\t\t// And put the geometry and material together into a mesh\n\t\t\tbtn = new THREE.Mesh(geometry, material);\n\t\n\t\t\t_rayInput2.default.add(btn, function () {\n\t\t\t\tbtn.material = highlightMaterial;\n\t\t\t}, function () {\n\t\t\t\tbtn.material = defaultMaterial;\n\t\t\t\t_video2.default.play();\n\t\t\t\tsound.play();\n\t\t\t\twheelStart();\n\t\t\t}, function () {\n\t\t\t\t_video2.default.stop();\n\t\t\t\tsound.pause\n\t\t\t\t// sound\n\t\t\t\t();wheelStahp();\n\t\t\t}\n\t\n\t\t\t// Move the mesh back from the camera and tilt it toward the viewer\n\t\t\t);btn.position.z = -1.95;\n\t\t\tbtn.position.y = -0.85;\n\t\t\tbtn.rotation.x = Math.PI / -4;\n\t\t\t// plane.rotation.y = Math.PI / 5\n\t\t\t// Finally, add the mesh to our scene\n\t\t\tscene.add(btn);\n\t\t});\n\t\n\t\tvar higlightMapUrl = __webpack_require__(6);\n\t\n\t\tloader.load(higlightMapUrl, function (map) {\n\t\t\t// Now, create a Basic material; pass in the map\n\t\t\thighlightMaterial = new THREE.MeshBasicMaterial({ map: map });\n\t\t});\n\t}\n\t\n\tfunction initVRControls() {\n\t\t// Set up VR camera controls\n\t\tcontrols = new THREE.DeviceOrientationControls(camera);\n\t}\n\t\n\tvar duration = 10000,\n\t    currentTime = Date.now(); // ms\n\t\n\t\n\tfunction animate() {\n\t\tif (!wheels || !wheelSpin) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar now = Date.now(),\n\t\t    deltat = now - currentTime;\n\t\n\t\tcurrentTime = now;\n\t\tvar fract = deltat / duration,\n\t\t    angle = Math.PI * 2 * fract;\n\t\n\t\twheels.rotation.x -= angle;\n\t}\n\t\n\tfunction run() {\n\t\telapsedTimeSum += clock.getElapsedTime();\n\t\n\t\tif (elapsedTimeSum > 5000) {\n\t\t\tisStart = true;\n\t\t}\n\t\n\t\trequestAnimationFrame(run);\n\t\n\t\tif (VRMode) {\n\t\t\t// ------------- CardBoard Mode ------------------\n\t\t\t// Render the scene\n\t\t\teffect.render(scene, camera);\n\t\t} else {\n\t\t\t// ---------------- Normal Mode ------------------\n\t\t\trenderer.render(scene, camera);\n\t\t}\n\t\n\t\t// Update the VR camera controls\n\t\tcontrols.update\n\t\n\t\t// Update the ray input\n\t\t();_rayInput2.default.update\n\t\n\t\t// Spin the cube for next frame\n\t\t();animate();\n\t\n\t\tif (!tractorBody) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (isStart) {\n\t\t\ttractorBody.visible = true;\n\t\t\twheels.visible = true;\n\t\t\tplane.visible = true;\n\t\t\tbtn.visible = true;\n\t\t} else {\n\t\t\ttractorBody.visible = false;\n\t\t\twheels.visible = false;\n\t\t\tplane.visible = false;\n\t\t\tbtn.visible = false;\n\t\t}\n\t}\n\t\n\tfunction wheelStahp() {\n\t\twheelSpin = false;\n\t}\n\t\n\tfunction wheelStart() {\n\t\twheelSpin = true;\n\t}\n\t\n\tfunction bindEvents() {\n\t\tdocument.querySelector('#btn-vr').addEventListener('click', function () {\n\t\t\tVRMode = !VRMode;\n\t\n\t\t\tif (container.mozRequestFullScreen) {\n\t\t\t\tcontainer.mozRequestFullScreen();\n\t\t\t} else {\n\t\t\t\tcontainer.webkitRequestFullscreen();\n\t\t\t}\n\t\t}, false);\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tvar video = void 0;\n\t\n\tfunction init(scene) {\n\t\tvar geometry = new THREE.SphereBufferGeometry(500, 60, 40);\n\t\tgeometry.scale(-1, 1, 1);\n\t\n\t\tvideo = document.createElement('video');\n\t\tvideo.width = 640;\n\t\tvideo.height = 360;\n\t\tvideo.loop = false;\n\t\tvideo.muted = true;\n\t\tvideo.src = '../src/home/videos/tractor1.mp4';\n\t\tvideo.setAttribute('webkit-playsinline', 'true');\n\t\tvideo.setAttribute('playsinline', 'true');\n\t\n\t\tvideo.onended = function () {\n\t\t\tconsole.log(\"ended\");\n\t\t};\n\t\n\t\tvideo.addEventListener('contextmenu', function (e) {\n\t\t\te.preventDefault();e.stopPropagation();\n\t\t}, false);\n\t\n\t\t// hide the controls if they're visible\n\t\tif (video.hasAttribute('controls')) {\n\t\t\tvideo.removeAttribute('controls');\n\t\t}\n\t\n\t\tvideo.play();\n\t\n\t\tvar texture = new THREE.VideoTexture(video);\n\t\ttexture.minFilter = THREE.LinearFilter;\n\t\ttexture.format = THREE.RGBFormat;\n\t\n\t\tvar material = new THREE.MeshBasicMaterial({ map: texture }),\n\t\t    mesh = new THREE.Mesh(geometry, material);\n\t\n\t\tmesh.rotation.y = Math.PI / 2;\n\t\n\t\treturn mesh;\n\t}\n\t\n\tfunction play() {\n\t\tvideo.play();\n\t}\n\t\n\tfunction stop() {\n\t\tvideo.pause();\n\t}\n\t\n\texports.default = { init: init, play: play, stop: stop };\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tfunction init(camera) {\n\t\t// initiate Reticulum so it loads up \n\t\tReticulum.init(camera, {\n\t\t\tproximity: false,\n\t\t\treticle: {\n\t\t\t\tvisible: true,\n\t\t\t\trestPoint: 1000, //Defines the reticle's resting point when no object has been targeted\n\t\t\t\tcolor: 0xcc0000,\n\t\t\t\tinnerRadius: 0.0001,\n\t\t\t\touterRadius: 0.003,\n\t\t\t\thover: {\n\t\t\t\t\tcolor: 0xcc0000,\n\t\t\t\t\tinnerRadius: 0.02,\n\t\t\t\t\touterRadius: 0.024,\n\t\t\t\t\tspeed: 5,\n\t\t\t\t\tvibrate: 50 //Set to 0 or [] to disable\n\t\t\t\t}\n\t\t\t},\n\t\t\tfuse: {\n\t\t\t\tvisible: true,\n\t\t\t\tduration: 2.5,\n\t\t\t\tcolor: 0x00fff6,\n\t\t\t\tinnerRadius: 0.045,\n\t\t\t\touterRadius: 0.06,\n\t\t\t\tvibrate: 0, //Set to 0 or [] to disable\n\t\t\t\tclickCancelFuse: false //If users clicks on targeted object fuse is canceled\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction add(object, overCallback, outCallback, longCallback) {\n\t\t// *******************************\n\t\t// --- Reticulum ---\n\t\t// have the object react when user looks at it\n\t\t// track the object\n\t\tReticulum.add(object, {\n\t\t\tonGazeOver: function onGazeOver() {\n\t\t\t\t// do something when user targets object\n\t\t\t\t// this.material.emissive.setHex( 0xffcc00 );\n\t\t\t\t// this.material.color = new THREE.Color(0, 0, 0);\n\t\t\t\toverCallback && overCallback();\n\t\t\t},\n\t\t\tonGazeOut: function onGazeOut() {\n\t\t\t\t// do something when user moves reticle off targeted object\n\t\t\t\t// this.material.emissive.setHex( 0xcc0000 );\n\t\t\t\t// this.material.color = new THREE.Color(1, 0, 0);\n\t\t\t\toutCallback && outCallback();\n\t\t\t},\n\t\t\tonGazeLong: function onGazeLong() {\n\t\t\t\tlongCallback && longCallback\n\t\t\t\t// do something user targetes object for specific time\n\t\t\t\t// this.material.emissive.setHex( 0x0000cc );\n\t\t\t\t// this.material.color = new THREE.Color(0, 0, 0);\n\t\t\t\t();\n\t\t\t},\n\t\t\tonGazeClick: function onGazeClick() {\n\t\t\t\t// have the object react when user clicks / taps on targeted object\n\t\t\t\t// this.material.emissive.setHex( 0x00cccc * Math.random() );\n\t\t\t\t// this.material.color = new THREE.Color(0, 0, 0);\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction update() {\n\t\tReticulum.update();\n\t}\n\t\n\texports.default = { init: init, update: update, add: add };\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"img/panel.png\";\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"img/look.png\";\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"img/look2.png\";\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// home.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dd5753a8605a948b2c1e","import './index.less'\nimport video from './video'\nimport rayInput from './rayInput'\n\nlet container = null\nlet\trenderer = null\nlet\teffect = null\nlet\tcontrols = null\nlet\tscene = null\nlet\tcamera = null\nlet\tplane = null\nlet btn = null\nlet wheels = null\nlet tractorBody = null\nlet\tVRMode = true\nlet wheelSpin = true\nlet sound = null\n\nlet isStart = false\n\nlet clock = new THREE.Clock()\nlet elapsedTimeSum = 0\n\n\n// Set up Three.js\ninitThreeJS()\n// Set up VR rendering\ninitVREffect()\n// Create the scene content\ninitScene()\n// Set up VR camera controls\ninitVRControls()\n\n// init ray input\ninitRayInput()\n\n// Run the run loop\nrun()\n// Bind Dom Events\nbindEvents()\n\nfunction initThreeJS() {\n\tcontainer = document.getElementById('container')\n\t// Create the Three.js renderer and attach it to our canvas\n\trenderer = new THREE.WebGLRenderer( { antialias: true } )\n\t// Set the viewport size\n\trenderer.setSize(window.innerWidth, window.innerHeight)\n\tcontainer.appendChild(renderer.domElement)\n\n\twindow.addEventListener('resize', function(event) {\n\t\trenderer.setSize(window.innerWidth, window.innerHeight)\n\t}, false)\n}\n\nfunction initRayInput() {\n\trayInput.init(camera)\n}\n\nfunction initVREffect() {\n// Set up Cardboard renderer\n\teffect = new THREE.StereoEffect(renderer)\n\teffect.setSize(window.innerWidth, window.innerHeight)\n\n\t// StereoEffect's default separation is in cm, we're in M\n\t// Actual cardboard eye separation is 2.5in\n\t// Finally, separation is per-eye so divide by 2\n\teffect.separation = 2.5 * 0.0254 / 2\n}\n\nfunction initScene() {\n\t// Create a new Three.js scene\n\tscene = new THREE.Scene()\n\t// Add  a camera so we can view the scene\n\t// Note that this camera's FOV is ignored in favor of the\n\t// Oculus-supplied FOV for each used inside VREffect.\n\t// See VREffect.js h/t Michael Blix\n\tcamera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 0.1, 4000 )\n\n\tscene.add(camera)\n\n\tscene.add(video.init())\n\n\n    var listener = new THREE.AudioListener();\n    camera.add( listener );\n    var audioLoader = new THREE.AudioLoader();\n    sound = new THREE.Audio( listener );\n    audioLoader.load( '../src/home/videos/tractor.mp3', function( buffer ) {\n        sound.setBuffer( buffer );\n        sound.setLoop(true);\n        sound.setVolume(0.02);\n        sound.play();\n    });\n\n    var ambient = new THREE.AmbientLight( 0x222222 );\n    scene.add( ambient );\n    var directionalLight = new THREE.DirectionalLight( 0xbbbbbb );\n    directionalLight.position.set( 0, 200, 50 ).normalize();\n    scene.add( directionalLight );\n\n\n\tcreateTractor()\n\n}\n\nlet defaultMaterial,  highlightMaterial\n\nfunction createTractor() {\n\n    let objLoader = new THREE.OBJLoader()\n\n    objLoader.setPath( '../src/home/obj/' )\n    objLoader.load( 'tractorbody.obj', function ( object ) {\n\n        var material = new THREE.MeshPhongMaterial( { color: 0xdd2211 } );\n\n        object.traverse( function ( child ) {\n\n            if ( child instanceof THREE.Mesh ) {\n\n                child.material = material;\n\n            }\n\n        } );\n\n\t\ttractorBody = object\n\n\t\tobject.position.x = 0\n\t\tobject.position.y = -6\n\t\tobject.position.z = 1\n\n\t\tobject.scale.x = 12\n\t\tobject.scale.y = 12\n\t\tobject.scale.z = 12\n\n\t\tscene.add( object )\n\n\n\t})\n\n\tobjLoader.load( 'tracwheels.obj', function ( object ) {\n\n\t\tvar material = new THREE.MeshLambertMaterial( { color: 0x333333 } );\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child instanceof THREE.Mesh ) {\n\n\t\t\t\tchild.material = material;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tobject.position.x = 0\n\t\tobject.position.y = -3.5\n\t\tobject.position.z = -1.8\n\n\t\tobject.scale.x = 12\n\t\tobject.scale.y = 12\n\t\tobject.scale.z = 12\n\n\t\twheels = object\n\n\t\tscene.add( object )\n\n\n\t})\n\n\tlet panelUrl = require('./images/panel.png')\n\n\tlet loader = new THREE.TextureLoader()\n\n\tloader.load(panelUrl, function(map){\n\t\t// Now, create a Basic material; pass in the map\n\t\tlet material = new THREE.MeshBasicMaterial({ map: map })\n\t\t// Create the cube geometry\n\t\tlet geometry = new THREE.PlaneGeometry(2, 2, 2)\n\t\t// And put the geometry and material together into a mesh\n\t\tplane = new THREE.Mesh(geometry, material)\n\t\t// Move the mesh back from the camera and tilt it toward the viewer\n\t\tplane.position.z = -2\n\t\t\t\t\tplane.position.y = -1\n\t\tplane.rotation.x = Math.PI / -4\n\t\t// plane.rotation.y = Math.PI / 5\n\t\t// Finally, add the mesh to our scene\n\t\tscene.add(plane)\n\t})\n\n\tlet lookUrl = require('./images/look.png')\n\n\tloader.load(lookUrl, function(map){\n\t\t// Now, create a Basic material; pass in the map\n\t\tlet material = defaultMaterial = new THREE.MeshBasicMaterial({ map: map })\n\t\t// Create the cube geometry\n\t\tlet geometry = new THREE.CubeGeometry(0.5, 0.5, 0.5)\n\t\t// And put the geometry and material together into a mesh\n\t\tbtn = new THREE.Mesh(geometry, material)\n\n\t\trayInput.add(btn, () => {\n\t\t\tbtn.material = highlightMaterial\n\t\t}, () => {\n\t\t\tbtn.material = defaultMaterial\n\t\t\tvideo.play()\n            sound.play()\n\t\t\twheelStart()\n\t\t}, () => {\n\t\t\tvideo.stop()\n            sound.pause()\n\t\t\t// sound\n\t\t\twheelStahp()\n\t\t}) \n\n\t\t// Move the mesh back from the camera and tilt it toward the viewer\n\t\tbtn.position.z = -1.95\n\t\tbtn.position.y = -0.85\n\t\tbtn.rotation.x = Math.PI / -4\n\t\t// plane.rotation.y = Math.PI / 5\n\t\t// Finally, add the mesh to our scene\n\t\tscene.add(btn)\n\t})\n\n\tlet higlightMapUrl = require('./images/look2.png')\n\n\tloader.load(higlightMapUrl, function (map) {\n\t\t// Now, create a Basic material; pass in the map\n\t\thighlightMaterial = new THREE.MeshBasicMaterial({map: map})\n\t})\n}\n\nfunction initVRControls() {\n\t// Set up VR camera controls\n\tcontrols = new THREE.DeviceOrientationControls(camera)\n}\n\nlet duration = 10000; // ms\nlet currentTime = Date.now()\n\nfunction animate() {\n\tif(!wheels || !wheelSpin){\n\t\treturn\n\t}\n\n\tlet now = Date.now()\n\tlet deltat = now - currentTime\n\tcurrentTime = now\n\tlet fract = deltat / duration\n\tlet angle = Math.PI * 2 * fract\n\twheels.rotation.x -= angle\n}\n\nfunction run() {\n\telapsedTimeSum += clock.getElapsedTime()\n\n\tif(elapsedTimeSum > 5000){\n\t\tisStart = true\n\t}\n\n\trequestAnimationFrame(run)\n\n\tif(VRMode){\n\t\t// ------------- CardBoard Mode ------------------\n\t\t// Render the scene\n\t\teffect.render( scene, camera )\n\t}else{\n\t\t// ---------------- Normal Mode ------------------\n\t\trenderer.render( scene, camera )\n\t}\n\n\t// Update the VR camera controls\n\tcontrols.update()\n\n\t// Update the ray input\n\trayInput.update()\n\t\n\t// Spin the cube for next frame\n\tanimate()\n\n\tif(!tractorBody){\n\t\treturn\n\t}\n\n\tif(isStart){\n\t\ttractorBody.visible = true\n\t\twheels.visible = true\n\t\tplane.visible = true\n\t\tbtn.visible = true\n\t}else{\n\t\ttractorBody.visible = false\n\t\twheels.visible = false\n\t\tplane.visible = false\n\t\tbtn.visible = false\n\t}\n}\n\nfunction wheelStahp() {\n\twheelSpin = false\n}\n\nfunction wheelStart() {\n\twheelSpin = true\n}\n\nfunction bindEvents(){\n\tdocument.querySelector('#btn-vr').addEventListener('click', () => {\n\t\tVRMode = !VRMode\n\n\t\tif ( container.mozRequestFullScreen ) {\n\t\t\tcontainer.mozRequestFullScreen()\n\t\t} else {\n\t\t\tcontainer.webkitRequestFullscreen()\n\t\t}\n\t}, false)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/home/index.js","let video\n\nfunction init(scene){\n\tlet geometry = new THREE.SphereBufferGeometry( 500, 60, 40 );\n\tgeometry.scale( - 1, 1, 1 );\n\n\tvideo = document.createElement( 'video' );\n\tvideo.width = 640;\n\tvideo.height = 360;\n\tvideo.loop = false;\n\tvideo.muted = true;\n\tvideo.src = '../src/home/videos/tractor1.mp4';\n\tvideo.setAttribute( 'webkit-playsinline', 'true' );\n\tvideo.setAttribute( 'playsinline', 'true' );\n\n\tvideo.onended = function() {\n\t\tconsole.log(\"ended\");\n\t}\n\n\tvideo.addEventListener('contextmenu', function (e) { e.preventDefault(); e.stopPropagation(); }, false);\n\n\t// hide the controls if they're visible\n\tif (video.hasAttribute('controls')) {\n\t\tvideo.removeAttribute('controls')   \n\t}\n\n\tvideo.play();\n\n\tlet texture = new THREE.VideoTexture( video );\n\ttexture.minFilter = THREE.LinearFilter;\n\ttexture.format = THREE.RGBFormat;\n\n\tlet material = new THREE.MeshBasicMaterial( { map : texture } );\n\n\tlet mesh = new THREE.Mesh( geometry, material );\n\n\tmesh.rotation.y = Math.PI / 2\n\n\treturn mesh\n}\n\nfunction play(){\n\tvideo.play()\n}\n\nfunction stop(){\n\tvideo.pause()\n}\n\nexport default {init, play, stop}\n\n\n\n// WEBPACK FOOTER //\n// ./src/home/video.js","function init(camera) {\n\t// initiate Reticulum so it loads up \n\tReticulum.init(camera, {\n\t\tproximity: false,\n\t\treticle: {\n\t\t\tvisible: true,\n\t\t\trestPoint: 1000, //Defines the reticle's resting point when no object has been targeted\n\t\t\tcolor: 0xcc0000,\n\t\t\tinnerRadius: 0.0001,\n\t\t\touterRadius: 0.003,\n\t\t\thover: {\n\t\t\t\tcolor: 0xcc0000,\n\t\t\t\tinnerRadius: 0.02,\n\t\t\t\touterRadius: 0.024,\n\t\t\t\tspeed: 5,\n\t\t\t\tvibrate: 50 //Set to 0 or [] to disable\n\t\t\t}\n\t\t},\n\t\tfuse: {\n\t\t\tvisible: true,\n\t\t\tduration: 2.5,\n\t\t\tcolor: 0x00fff6,\n\t\t\tinnerRadius: 0.045,\n\t\t\touterRadius: 0.06,\n\t\t\tvibrate: 0, //Set to 0 or [] to disable\n\t\t\tclickCancelFuse: false //If users clicks on targeted object fuse is canceled\n\t\t}\n\t});\n}\n\nfunction add(object, overCallback, outCallback, longCallback){\n// *******************************\n\t// --- Reticulum ---\n\t// have the object react when user looks at it\n\t// track the object\n\tReticulum.add( object, {\n\t\tonGazeOver: function(){\n\t\t\t// do something when user targets object\n\t\t\t// this.material.emissive.setHex( 0xffcc00 );\n\t\t\t// this.material.color = new THREE.Color(0, 0, 0);\n\t\t\toverCallback && overCallback()\n\t\t},\n\t\tonGazeOut: function(){\n\t\t\t// do something when user moves reticle off targeted object\n\t\t\t// this.material.emissive.setHex( 0xcc0000 );\n\t\t\t// this.material.color = new THREE.Color(1, 0, 0);\n\t\t\toutCallback && outCallback()\n\t\t},\n\t\tonGazeLong: function(){\n\t\t\tlongCallback && longCallback()\n\t\t\t// do something user targetes object for specific time\n\t\t\t// this.material.emissive.setHex( 0x0000cc );\n\t\t\t// this.material.color = new THREE.Color(0, 0, 0);\n\t\t},\n\t\tonGazeClick: function(){\n\t\t\t// have the object react when user clicks / taps on targeted object\n\t\t\t// this.material.emissive.setHex( 0x00cccc * Math.random() );\n\t\t\t// this.material.color = new THREE.Color(0, 0, 0);\n\t\t}\n\t});\n}\n\nfunction update() {\n\tReticulum.update()\n}\n\nexport default {init, update, add}\n\n\n\n// WEBPACK FOOTER //\n// ./src/home/rayInput.js","module.exports = __webpack_public_path__ + \"img/panel.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/home/images/panel.png\n// module id = 4\n// module chunks = 0","module.exports = __webpack_public_path__ + \"img/look.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/home/images/look.png\n// module id = 5\n// module chunks = 0","module.exports = __webpack_public_path__ + \"img/look2.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/home/images/look2.png\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}